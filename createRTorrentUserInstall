#!/bin/bash
# Hellish Tech
# No commercial usage without authorization
exec 1> >(logger -s -t $(basename $0)) 2>&1 

while [[ $# -gt 1 ]]
do
key="$1"

case $key in
    -u|--username)
    USERNAME="$2"
    shift # past argument 
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

trlt="$(curl -s https://api.github.com/repos/autodl-community/autodl-trackers/releases/latest | sed -rn 's/(.*)"tag_name": "v(.*)",/\2/p')"
dltrkrs="https://github.com/autodl-community/autodl-trackers/releases/download/v$trlt/autodl-trackers-v$trlt.zip"

IRSSIPASSWORD1=`sfsGenerateRandomPasswordString`
USERPASSWORD=$(echo "$(cat /etc/seedbox-from-scratch/users/${USERNAME}.info)" | grep "Password: " | head -n1 | awk '{print $2}')
SYSTEMHOSTNAME=`cat /etc/seedbox-from-scratch/hostname.info`
WEBSERVERPORT=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 8081 -ep 8180)
WEBSSLSERVERPORT=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 8444 -ep 8543)
IRSSIPORT1=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 51000 -ep 51999)
SERVERPORT=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 51414 -ep 51513)
UDPPORT=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 6882 -ep 6982)
OTHERPORT=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 5001 -ep 5999)
USERUID=$(id -u ${USERNAME})
USERGID=$(id -g ${USERNAME})
HTPASSWDGENED=$(/etc/seedbox-from-scratch/sfsGenerateUserHtpassword -u ${USERNAME})


docker pull thevisad/rutorrent:latest

docker run --restart=always -d --name ${USERNAME}_rutorrent -e LOCAL_USER_ID=${USERUID} -h ${SYSTEMHOSTNAME} -v /home/${USERNAME}/downloads/manual:/downloads -v /home/${USERNAME}/rtorrent/config:/config -e PGID=${USERGID} -e PUID=${USERUID} -p ${WEBSSLSERVERPORT}:443 -p ${WEBSERVERPORT}:80 -p ${SERVERPORT}:${SERVERPORT} -p ${UDPPORT}:6881 -p ${OTHERPORT}:${OTHERPORT} -v /etc/seedbox-from-scratch/ssl:/etc/ssl/certs -v /etc/localtime:/etc/localtime:ro thevisad/rutorrent


CHECKIFRUNNING=$(/etc/seedbox-from-scratch/sfsRunningUserDockerInfo -u ${USERNAME} -d rutorrent | tr -cd '[[:alnum:]]._-' )
if [[ (${CHECKIFRUNNING} == "STOPPED") || (${CHECKIFRUNNING} == "RUNNING") ]]; then

	#echo "<?php \$streampath = 'http://$IPADDRESS1:${WEBSSLSERVERPORT}/stream/view.php'; ?>" | tee /tmp/rutorrent/plugins/mediastream/conf.php > /dev/null

	#cp /etc/seedbox-from-scratch/templates/Snoopy.class.inc.template /tmp/rutorrent/php/Snoopy.class.inc 
	docker cp /etc/seedbox-from-scratch/templates/rutorrent.plugins.filemanager.conf.php.template ${USERNAME}_rutorrent:/usr/share/webapps/rutorrent/plugins/filemanager/conf.php
	docker cp /etc/seedbox-from-scratch/templates/rutorrent.plugins.fileshare.conf.php.template ${USERNAME}_rutorrent:/usr/share/webapps/rutorrent/plugins/fileshare/conf.php
	docker cp /etc/seedbox-from-scratch/templates/Snoopy.class.inc.template ${USERNAME}_rutorrent:/usr/share/webapps/rutorrent/php/Snoopy.class.inc 

	#cp /etc/seedbox-from-scratch/templates/docker.nginx.conf.template /home/${USERNAME}/rtorrent/config/nginx/nginx.conf
	sudo cp /etc/seedbox-from-scratch/templates/rutorrent.conf.users.plugins.autodl-irssi.conf.php.template /tmp/rutorrent.conf.users.plugins.autodl-irssi.conf.php.template.tmp
	sudo perl -pi -e "s/<PASSWORD>/$IRSSIPASSWORD1/g" /tmp/rutorrent.conf.users.plugins.autodl-irssi.conf.php.template.tmp
	sudo perl -pi -e "s/<PORT>/$IRSSIPORT1/g" /tmp/rutorrent.conf.users.plugins.autodl-irssi.conf.php.template.tmp
	docker cp /tmp/rutorrent.conf.users.plugins.autodl-irssi.conf.php.template.tmp ${USERNAME}_rutorrent:/usr/share/webapps/rutorrent/plugins/autodl-irssi/conf.php

	wget https://raw.githubusercontent.com/nelu/rutorrent-thirdparty-plugins/stable/filemanager/flm.class.php -O /tmp/rutorrent.filemanager.flm.class.php
	wget https://raw.githubusercontent.com/nelu/rutorrent-thirdparty-plugins/stable/filemanager/settings.js.php -O /tmp/rutorrent.filemanager.settings.js.php
	perl -pi -e "s/\\\$topDirectory/\\\$homeDirectory/g" /tmp/rutorrent.filemanager.settings.js.php
	perl -pi -e "s/\\\$topDirectory\, \\\$fm/\\\$homeDirectory\, \\\$topDirectory\, \\\$fm/g" /tmp/rutorrent.filemanager.flm.class.php
	perl -pi -e "s/\\\$this\-\>userdir \= addslash\(\\\$topDirectory\)\;/\\\$this\-\>userdir \= \\\$homeDirectory \? addslash\(\\\$homeDirectory\) \: addslash\(\\\$topDirectory\)\;/g" /tmp/rutorrent.filemanager.flm.class.php
	docker cp /tmp/rutorrent.filemanager.flm.class.php ${USERNAME}_rutorrent:/usr/share/webapps/rutorrent/plugins/filemanager/flm.class.php
	docker cp /tmp/rutorrent.filemanager.settings.js.php ${USERNAME}_rutorrent:/usr/share/webapps/rutorrent/plugins/filemanager/settings.js.php

	
	
	sudo rm -R /tmp/rtorrentinstalltemp/
	sudo mkdir -p /tmp/rtorrentinstalltemp/.irssi/
	sudo git clone https://github.com/autodl-community/autodl-irssi.git /tmp/rtorrentinstalltemp/.irssi/scripts/
	sudo mkdir -p /tmp/rtorrentinstalltemp/.irssi/scripts/autorun

	sudo wget -qO /tmp/rtorrentinstalltemp/autodl-trackers.zip "$dltrkrs"
	sudo unzip -qo /tmp/rtorrentinstalltemp/autodl-trackers.zip -d /tmp/rtorrentinstalltemp/.irssi/scripts/AutodlIrssi/trackers/

	sudo cp /tmp/rtorrentinstalltemp/.irssi/scripts/autodl-irssi.pl /tmp/rtorrentinstalltemp/.irssi/scripts/autorun/
	sudo mkdir -p /tmp/rtorrentinstalltemp/.autodl
	sudo cp /etc/seedbox-from-scratch/templates/home.user.autodl.autodl.cfg.template /tmp/rtorrentinstalltemp/.autodl/autodl.cfg
	sudo rm -f /tmp/rtorrentinstalltemp/autodl-{irssi,trackers}.zip /tmp/rtorrentinstalltemp/.irssi/scripts/{README*,*.md,autodl-irssi.pl}
	sudo chown -R root:root /tmp/rtorrentinstalltemp/.irssi

	sudo perl -pi -e "s/<PASSWORD>/$IRSSIPASSWORD1/g"  /tmp/rtorrentinstalltemp/.autodl/autodl.cfg
	sudo perl -pi -e "s/<PORT>/$IRSSIPORT1/g"  /tmp/rtorrentinstalltemp/.autodl/autodl.cfg
	sudo perl -pi -e "s/use Digest\:\:SHA1 qw/use Digest\:\:SHA qw/g" /tmp/rtorrentinstalltemp/.irssi/scripts/AutodlIrssi/MatchedRelease.pm
	docker cp /tmp/rtorrentinstalltemp/.irssi/* ${USERNAME}_rutorrent:/root/.irssi
	docker cp /tmp/rtorrentinstalltemp/.autodl/* ${USERNAME}_rutorrent:/root/.autodl

	perl -pi -e "s/51413/${SERVERPORT}/g" /home/${USERNAME}/rtorrent/config/rtorrent/rtorrent.rc
	chown ${USERNAME}:${USERNAME} /home/${USERNAME}/rtorrent/ -R
	  
	echo ${HTPASSWDGENED} > /tmp/temp.htpasswd
	docker cp /tmp/temp.htpasswd ${USERNAME}_rutorrent:/usr/share/webapps/.htpasswd
	rm -rf /tmp/temp.htpasswd

	

	echo "SERVICE: RTORRENT" > /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "USERNAME: $USERNAME" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "ACCESSURL: https://$SYSTEMHOSTNAME:$WEBSSLSERVERPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "ACCESSURL: http://$SYSTEMHOSTNAME:$WEBSERVERPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "WEBSSLSERVERPORT: $WEBSSLSERVERPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "WEBSERVERPORT: $WEBSERVERPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "SERVERPORT: $SERVERPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "UDPPORT: $UDPPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "OTHERPORT: $OTHERPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "UDPPORT: $UDPPORT" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	echo "IRSSIPASSWORD1: $IRSSIPASSWORD1" >> /home/${USERNAME}/private/rutorrent.serviceinfo
	chown www-data:www-data  /home/${USERNAME}/private/*.serviceinfo
	
	docker restart ${USERNAME}_rutorrent
fi

if [[ -n $1 ]]; then
    echo "Last line of file specified as non-opt/last argument:"
    tail -1 $1
fi