#!/bin/bash
# Hellish Tech
# No commercial usage without authorization
# createPlexUserInstall -u USERNAME -pt PLEXTOKEN -pp yes/no

exec 1> >(logger -s -t $(basename $0)) 2>&1 

while [[ $# -gt 1 ]]
do
key="$1"

case $key in
    -u|--username)
    USERNAME="$2"
    shift # past argument
    ;;
    -pt|--plextoken)
    PLEXTOKEN="$2"
    shift # past argument
    ;;
	-pp|--plexpass)
    PLEXPASS="$2"
    shift # past argument
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

SYSTEMHOSTNAME=`cat /etc/seedbox-from-scratch/hostname.info`
PLEXPORT=$(/etc/seedbox-from-scratch/sfsgetAvailablePort -sp 32401 -ep 32500)
USERPASSWORD=$(echo "$(cat /etc/seedbox-from-scratch/users/${USERNAME}.info)" | grep "Password: " | head -n1 | awk '{print $2}')
OLDPLEXPORT=$(grep -o 'ManualPortMappingPort.*' /home/${USERNAME}/plex/config/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml | cut -d \" -f2)


docker pull plexinc/pms-docker:latest
docker pull plexinc/pms-docker:plexpass

if [[ (${PLEXPASS} == "yes") ]]; then
docker run --restart=always -d --name ${USERNAME}_plex -h ${SYSTEMHOSTNAME} -e PLEX_CLAIM="${PLEXTOKEN}" -e ADVERTISE_IP="https://${SYSTEMHOSTNAME}:${PLEXPORT}/" --dns=$(grep nameserver /etc/resolv.conf|tail -1|cut -d ' ' -f 2) -v /home/${USERNAME}/media:/data -v /home/${USERNAME}/downloads/manual:/download -v /home/${USERNAME}/plex/config:/config -p ${PLEXPORT}:32400 plexinc/pms-docker:plexpass
fi

if [[ (${PLEXPASS} == "no") ]]; then
docker run --restart=always -d --name ${USERNAME}_plex -h ${SYSTEMHOSTNAME} -e PLEX_CLAIM="${PLEXTOKEN}" -e ADVERTISE_IP="https://${SYSTEMHOSTNAME}:${PLEXPORT}/" --dns=$(grep nameserver /etc/resolv.conf|tail -1|cut -d ' ' -f 2) -v /home/${USERNAME}/media:/data -v /home/${USERNAME}/downloads/manual:/download -v /home/${USERNAME}/plex/config:/config -p ${PLEXPORT}:32400 plexinc/pms-docker:latest
fi

sleep 5

CHECKIFRUNNING=$(/etc/seedbox-from-scratch/sfsRunningUserDockerInfo -u ${USERNAME} -d plex | tr -cd '[[:alnum:]]._-' )
if [[ (${CHECKIFRUNNING} == "STOPPED") || (${CHECKIFRUNNING} == "RUNNING") ]]; then

 echo "SERVICE: PLEX" > /home/${USERNAME}/private/plex.serviceinfo
 echo "USERNAME: $USERNAME" >> /home/${USERNAME}/private/plex.serviceinfo
 echo "ACCESSURL: https://$SYSTEMHOSTNAME:$PLEXPORT/web" >> /home/${USERNAME}/private/plex.serviceinfo
 echo "ACCESSURL: http://$SYSTEMHOSTNAME:$PLEXPORT/web" >> /home/${USERNAME}/private/plex.serviceinfo
 echo "PLEXPORT: $PLEXPORT" >> /home/${USERNAME}/private/plex.serviceinfo
 chown www-data:www-data  /home/${USERNAME}/private/*.serviceinfo
fi

if ((${OLDPLEXPORT} >= 1000)); then
 sudo perl -pi -e "s/${OLDPLEXPORT}/${PLEXPORT}/g" /home/${USERNAME}/plex/config/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml
fi

if [[ -n $1 ]]; then
    echo "Last line of file specified as non-opt/last argument:"
    tail -1 $1
fi